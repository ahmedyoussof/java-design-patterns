@startuml
interface Device {
    +isEnabled(): boolean
    +enable(): void
    +disable(): void
    +getVolume(): int
    +setVolume(percent: int): void
    +getChannel(): int
    +setChannel(channel: int): void
    +printStatus(): void
}

class TV implements Device {
    +isEnabled(): boolean
    +enable(): void
    +disable(): void
    +getVolume(): int
    +setVolume(percent: int): void
    +getChannel(): int
    +setChannel(channel: int): void
    +printStatus(): void
}
class Radio implements Device {
    +isEnabled(): boolean
    +enable(): void
    +disable(): void
    +getVolume(): int
    +setVolume(percent: int): void
    +getChannel(): int
    +setChannel(channel: int): void
    +printStatus(): void
}

abstract class Remote {
    -device: Device
    +togglePower(): void
    +volumeDown(): void
    +volumeUp(): void
    +channelDown(): void
    +channelUp(): void
}
class BasicRemote extends Remote {
    +togglePower(): void
    +volumeDown(): void
    +volumeUp(): void
    +channelDown(): void
    +channelUp(): void
}

class AdvancedRemote extends Remote {
    +mute(): void
}

class Client {
    -testRemote(remote: Remote): void
}

Client -r-> Remote: testRemote
Remote *--> Device



@enduml


